{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "AQDA"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FlowRiego')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PROCESOS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DLRiego",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DLRiego2020",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWThRiego",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Seleccionar1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "Columnaderivada1"
						},
						{
							"name": "union"
						}
					],
					"script": "source(output(\n\t\t{ï»¿\"Nombre\"} as string,\n\t\t{F. Ini} as timestamp 'dd-MM-yyyy',\n\t\t{F. Ter} as timestamp 'dd-MM-yyyy',\n\t\t{m3 Real} as double,\n\t\t{m3 Prg} as string,\n\t\t{mm Real} as string,\n\t\t{mm Prg} as string,\n\t\t{T. Oper} as timestamp 'HH:mm',\n\t\tHuerto as string,\n\t\tSectores as string,\n\t\tFertirrigado as string,\n\t\tcc1 as string,\n\t\tcc2 as string,\n\t\tcc3 as string,\n\t\tcc4 as string,\n\t\tcc5 as string,\n\t\tcc6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\t{ï»¿\"Nombre\"} as string,\n\t\t{F. Ini} as timestamp 'dd-MM-yyyy',\n\t\t{F. Ter} as timestamp 'dd-MM-yyyy',\n\t\t{m3 Real} as double,\n\t\t{m3 Prg} as string,\n\t\t{mm Real} as string,\n\t\t{mm Prg} as string,\n\t\t{T. Oper} as timestamp 'HH:mm',\n\t\tHuerto as string,\n\t\tSectores as string,\n\t\tFertirrigado as string,\n\t\tcc1 as string,\n\t\tcc2 as string,\n\t\tcc3 as string,\n\t\tcc4 as string,\n\t\tcc5 as string,\n\t\tcc6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nunion select(mapColumn(\n\t\tSegmento = {ï»¿\"Nombre\"},\n\t\tFechaInicial = {F. Ini},\n\t\tFechaTermino = {F. Ter},\n\t\tm3Real = {m3 Real},\n\t\t{T. Oper},\n\t\tSectores\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Seleccionar1\nColumnaderivada1 alterRow(insertIf(true())) ~> Modificarfila1\nSeleccionar1 derive(idFecha = year(FechaInicial)*10000+month(FechaInicial)*100+dayOfMonth(FechaInicial),\n\t\tNombreTabla = 'ThRiego') ~> Columnaderivada1\nsource1, source2 union(byName: true)~> union\nModificarfila1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tidRiego as integer,\n\t\tidFecha as integer,\n\t\tFechaInicio as date,\n\t\tFechaFin as date,\n\t\tm3Real as double,\n\t\tTiempoOperacion as timestamp,\n\t\tSector as string,\n\t\tNombreTabla as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.ThRiego'],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFechaInicio = FechaInicial,\n\t\tFechaFin = FechaTermino,\n\t\tm3Real,\n\t\tTiempoOperacion = {T. Oper},\n\t\tSector = Segmento,\n\t\tidFecha,\n\t\tNombreTabla\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FlowThFertilizantes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DLFertilizantes",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DLMaestraSec",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWThFertilizante",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Seleccionar1"
						},
						{
							"name": "anulardinamizacion"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "Seleccionar2"
						},
						{
							"name": "Columnaderivada1"
						},
						{
							"name": "combinacion"
						}
					],
					"script": "source(output(\n\t\t{odata.etag} as string,\n\t\tItemInternalId as string,\n\t\tID as integer,\n\t\tTitle as string,\n\t\tN_x0028__x0025_p_x002f_p_x0029_ as double,\n\t\tModified as string,\n\t\tCreated as string,\n\t\tAuthor as ({odata.type} as string, Claims as string, DisplayName as string, Email as string, Picture as string, Department as string, JobTitle as string),\n\t\t{Author#Claims} as string,\n\t\tEditor as ({odata.type} as string, Claims as string, DisplayName as string, Email as string, Picture as string, Department as string, JobTitle as string),\n\t\t{Editor#Claims} as string,\n\t\tIdentifier as string,\n\t\tIsFolder as boolean,\n\t\tThumbnail as (Large as string, Medium as string, Small as string),\n\t\tLink1 as string,\n\t\tName as string,\n\t\tFilenameWithExtension as string,\n\t\tPath as string,\n\t\tFullPath as string,\n\t\tHasAttachments as boolean,\n\t\tVersionNumber as string,\n\t\tK2O_x0028__x0025_p_x002f_p_x0029 as double,\n\t\tP2O5_x0028__x0025_p_x002f_p_x002 as double,\n\t\tB_x0028__x0025_p_x002f_p_x0029_ as double,\n\t\tCaO_x0028__x0025_p_x002f_p_x0029 as double,\n\t\tZn_x0028_NO3_x0029_2_x0028__x002 as double,\n\t\tMgO_x0028__x0025_p_x002f_p_x0029 as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource(output(\n\t\t{odata.etag} as string,\n\t\tItemInternalId as string,\n\t\tID as integer,\n\t\tTitle as string,\n\t\tSector as string,\n\t\tArea as double,\n\t\tModified as string,\n\t\tCreated as string,\n\t\tAuthor as ({odata.type} as string, Claims as string, DisplayName as string, Email as string, Picture as string, Department as string, JobTitle as string),\n\t\t{Author#Claims} as string,\n\t\tEditor as ({odata.type} as string, Claims as string, DisplayName as string, Email as string, Picture as string, Department as string, JobTitle as string),\n\t\t{Editor#Claims} as string,\n\t\tIdentifier as string,\n\t\tIsFolder as boolean,\n\t\tThumbnail as (Large as string, Medium as string, Small as string),\n\t\tLink1 as string,\n\t\tName as string,\n\t\tFilenameWithExtension as string,\n\t\tPath as string,\n\t\tFullPath as string,\n\t\tHasAttachments as boolean,\n\t\tVersionNumber as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source2\nsource1 select(mapColumn(\n\t\tTitle,\n\t\tN = N_x0028__x0025_p_x002f_p_x0029_,\n\t\tK2O = K2O_x0028__x0025_p_x002f_p_x0029,\n\t\tP2O5 = P2O5_x0028__x0025_p_x002f_p_x002,\n\t\tB = B_x0028__x0025_p_x002f_p_x0029_,\n\t\tCaO = CaO_x0028__x0025_p_x002f_p_x0029,\n\t\tZn = Zn_x0028_NO3_x0029_2_x0028__x002,\n\t\tMgO = MgO_x0028__x0025_p_x002f_p_x0029\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Seleccionar1\nSeleccionar1 unpivot(output(\n\t\tCompuesto as string,\n\t\tValor as double\n\t),\n\tungroupBy(Title),\n\tlateral: false,\n\tignoreNullPivots: false) ~> anulardinamizacion\ncombinacion alterRow(insertIf(true())) ~> Modificarfila1\nsource2 select(mapColumn(\n\t\tTitle,\n\t\tSector,\n\t\tArea\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Seleccionar2\nSeleccionar2 derive(Area = toFloat(Area)) ~> Columnaderivada1\nanulardinamizacion, Columnaderivada1 join(true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> combinacion\nModificarfila1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tidFertilizante as integer,\n\t\tNombre as string,\n\t\tCompuesto as string,\n\t\tValor as double,\n\t\tSector as string,\n\t\tNombreSector as string,\n\t\tArea as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.ThFertilizante'],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tNombre = Title,\n\t\tCompuesto,\n\t\tValor,\n\t\tSector,\n\t\tNombreSector = Seleccionar2@Title,\n\t\tArea\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FlowWeather')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PROCESOS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DLWeather",
								"type": "DatasetReference"
							},
							"name": "Inicio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DWThweather",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Seleccionar1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "Columnaderivada1"
						}
					],
					"script": "source(output(\n\t\tDate as date 'MM-dd-yyyy',\n\t\t{Temperature (�C)} as string,\n\t\t{Minimum Temperature (�C)} as string,\n\t\t{Maximum Temperature (�C)} as string,\n\t\t{Relative Humidity (%)} as string,\n\t\t{Minimum Relative Humidity (%)} as string,\n\t\t{Maximum Relative Humidity (%)} as string,\n\t\t{Rainfall (mm)} as float,\n\t\t{Accumulated Daily Rainfall (mm)} as string,\n\t\t{ET0 (mm)} as float,\n\t\t{Accumulated ET0 (mm)} as string,\n\t\t{Atmospheric Pressure (Pa)} as string,\n\t\t{Minimum Atmospheric Pressure (Pa)} as string,\n\t\t{Maximum Atmospheric Pressure (Pa)} as string,\n\t\t{Average Wind Speed (Km/h)} as string,\n\t\t{Prevailing Wind Direction} as string,\n\t\t{Solar Radiation (W/m�)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Inicio\nInicio select(mapColumn(\n\t\tDate,\n\t\t{Rainfall (mm)},\n\t\t{ET0 (mm)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Seleccionar1\nColumnaderivada1 alterRow(insertIf(true())) ~> Modificarfila1\nSeleccionar1 derive(idFecha = year(Date)*10000+month(Date)*100+dayOfMonth(Date),\n\t\tNombreTabla = 'ThWeather') ~> Columnaderivada1\nModificarfila1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tidWeather as integer,\n\t\tidFecha as integer,\n\t\tLluvia as double,\n\t\tET0 as double,\n\t\tNombreTabla as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.ThWeather'],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tidFecha,\n\t\tLluvia = {Rainfall (mm)},\n\t\tET0 = {ET0 (mm)},\n\t\tNombreTabla\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DimFert",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowThFertilizantes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimSec",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowDimSec",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AuxDimEERR",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowDimAuxEERR",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AuxDimBalance",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowDimAuxBalance",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DimCuentas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowDimCuentas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FlowThFertilizantes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1Th')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ThRiego",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowRiego",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ThWeather",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowWeather",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Inicio": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ThProduccion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowProduccion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"SectorMaestraPOST": {},
									"VariedadMaestraPOST": {},
									"Especies": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "RegistroFertilizante",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowRegistroFertilizante",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "EEERR",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EERR",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Mayores": {},
									"source1": {},
									"source2": {},
									"source3": {},
									"source4": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FlowRiego')]",
				"[concat(variables('factoryId'), '/dataflows/FlowWeather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prueba')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowRiego",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FlowRiego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Consolidado Flujo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dimensiones",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "0Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Th Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "dimensiones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1Th",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/0Dim')]",
				"[concat(variables('factoryId'), '/pipelines/1Th')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Consolidado')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dim",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "0Dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1Th",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/0Dim')]",
				"[concat(variables('factoryId'), '/pipelines/1Th')]"
			]
		}
	]
}